{"version":3,"file":"static/js/25.aef02b47.chunk.js","mappings":"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","sources":["redux/phonebook-operations.js","redux/phonebook-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/Form.module.css?b4b9","components/ContactsForm/ContactsForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/Contacts.module.css?3131","components/ContactsList/ContactsList.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage.module.css?7675","pages/ContactsPage.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n    alert(error.message);\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n    alert(error.message);\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default contactsOperations;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__sJZBb\",\"label\":\"Form_label__WhLY3\",\"input\":\"Form_input__wdR67\",\"button\":\"Form_button__aSHIj\"};","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/phonebook-operations';\nimport { getContacts } from '../../redux/phonebook-selectors';\n\nimport s from './Form.module.css';\n\nexport default function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const similarContact = contacts.find(contact => contact.name === name);\n\n    if (similarContact) {\n      return toast.error(`${similarContact.name} is already in your list`);\n    } else dispatch(contactsOperations.addContact(name, number));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook-selectors';\nimport * as actions from '../../redux/phonebook-actions';\n\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => dispatch(actions.changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filterValue}\n        onChange={changeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__Gxku1\",\"item\":\"Contacts_item__-6wZN\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/phonebook-selectors';\nimport contactsOperations from '../../redux/phonebook-operations';\n\nimport s from './Contacts.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={s.item}>\n          {contact.name}: {contact.number}\n          <button onClick={() => onDelete(contact.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactsPage_phonebook__Vs2ct\",\"title\":\"ContactsPage_title__X03js\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport contactsOperations from '../redux/phonebook-operations';\n\nimport ContactsForm from '../components/ContactsForm';\nimport Filter from '../components/Filter';\nimport ContactsList from '../components/ContactsList';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <main>\n      <section className={s.phonebook}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactsForm />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </section>\n    </main>\n  );\n}\n"],"names":["contactsOperations","fetchContacts","dispatch","fetchContactsRequest","axios","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactRequest","addContactSuccess","addContactError","alert","deleteContact","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactsForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","currentTarget","value","className","s","onSubmit","preventDefault","similarContact","find","toast","type","onChange","pattern","title","required","Filter","filterValue","actions","target","ContactsList","map","onClick","id","ContactsPage","useEffect"],"sourceRoot":""}